const e="latest/en/plugins/transformation/frontend-gray.md",n="docs",r="latest/en/plugins/transformation/frontend-gray",i="## Function Description\nThe `frontend-gray` plugin implements the functionality of user gray release on the frontend. Through this plugin, it can be used for business `A/B testing`, while the `gradual release` combined with `monitorable` and `rollback` strategies ensures the stability of system release operations.\n\n## Runtime Attributes\nPlugin execution phase: `Authentication Phase`  \nPlugin execution priority: `450`\n\n## Configuration Fields\n| Name             | Data Type         | Requirements  | Default Value | Description                                                                                                 |\n|-----------------|-------------------|---------------|---------------|-------------------------------------------------------------------------------------------------------------|\n| `grayKey`       | string            | Optional      | -             | The unique identifier of the user ID, which can be from Cookie or Header, such as userid. If not provided, uses `rules[].grayTagKey` and `rules[].grayTagValue` to filter gray release rules. |\n| `graySubKey`    | string            | Optional      | -             | User identity information may be output in JSON format, for example: `userInfo:{ userCode:\"001\" }`, in the current example, `graySubKey` is `userCode`. |\n| `rules`         | array of object    | Required      | -             | User-defined different gray release rules, adapted to different gray release scenarios.                      |\n| `rewrite`       | object            | Required      | -             | Rewrite configuration, generally used for OSS/CDN frontend deployment rewrite configurations.                |\n| `baseDeployment`| object            | Optional      | -             | Configuration of the Base baseline rules.                                                                    |\n| `grayDeployments` | array of object   | Optional      | -             | Configuration of the effective rules for gray release, as well as the effective versions.                     |\n\n`rules` field configuration description:\n| Name             | Data Type         | Requirements  | Default Value | Description                                                                                |\n|------------------|-------------------|---------------|---------------|--------------------------------------------------------------------------------------------|\n| `name`           | string            | Required      | -             | Unique identifier for the rule name, associated with `deploy.gray[].name` for effectiveness. |\n| `grayKeyValue`   | array of string   | Optional      | -             | Whitelist of user IDs.                                                                    |\n| `grayTagKey`     | string            | Optional      | -             | Label key for user classification tagging, derived from Cookie.                               |\n| `grayTagValue`   | array of string   | Optional      | -             | Label value for user classification tagging, derived from Cookie.                             |\n\n`rewrite` field configuration description:\n> `indexRouting` homepage rewrite and `fileRouting` file rewrite essentially use prefix matching, for example, `/app1`: `/mfe/app1/{version}/index.html` represents requests with the prefix /app1 routed to `/mfe/app1/{version}/index.html` page, where `{version}` represents the version number, which will be dynamically replaced by `baseDeployment.version` or `grayDeployments[].version` during execution.  \n> `{version}` will be replaced dynamically during execution by the frontend version from `baseDeployment.version` or `grayDeployments[].version`.\n\n| Name             | Data Type         | Requirements  | Default Value | Description                           |\n|------------------|-------------------|---------------|---------------|---------------------------------------|\n| `host`           | string            | Optional      | -             | Host address, if OSS set to the VPC internal access address. |\n| `notFoundUri`    | string            | Optional      | -             | 404 page configuration.               |\n| `indexRouting`   | map of string to string | Optional  | -             | Defines the homepage rewrite routing rules. Each key represents the homepage routing path, and the value points to the redirect target file. For example, the key `/app1` corresponds to the value `/mfe/app1/{version}/index.html`. If the effective version is `0.0.1`, the access path is `/app1`, it redirects to `/mfe/app1/0.0.1/index.html`. |\n| `fileRouting`    | map of string to string | Optional  | -             | Defines resource file rewrite routing rules. Each key represents the resource access path, and the value points to the redirect target file. For example, the key `/app1/` corresponds to the value `/mfe/app1/{version}`. If the effective version is `0.0.1`, the access path is `/app1/js/a.js`, it redirects to `/mfe/app1/0.0.1/js/a.js`. |\n\n`baseDeployment` field configuration description:\n| Name             | Data Type         | Requirements  | Default Value | Description                                                                                |\n|------------------|-------------------|---------------|---------------|-------------------------------------------------------------------------------------------|\n| `version`        | string            | Required      | -             | The version number of the Base version, as a fallback version.                           |\n\n`grayDeployments` field configuration description:\n| Name             | Data Type         | Requirements  | Default Value | Description                                                                                  |\n|------------------|-------------------|---------------|---------------|----------------------------------------------------------------------------------------------|\n| `version`        | string            | Required      | -             | Version number of the Gray version, if the gray rules are hit, this version will be used. If it is a non-CDN deployment, add `x-higress-tag` to the header. |\n| `backendVersion` | string            | Required      | -             | Gray version for the backend, which will add `x-mse-tag` to the header of `XHR/Fetch` requests. |\n| `name`           | string            | Required      | -             | Rule name associated with `rules[].name`.                                                  |\n| `enabled`        | boolean           | Required      | -             | Whether to activate the current gray release rule.                                          |\n\n## Configuration Example\n### Basic Configuration\n```yml\ngrayKey: userid\nrules:\n- name: inner-user\n  grayKeyValue:\n  - '00000001'\n  - '00000005'\n- name: beta-user\n  grayKeyValue:\n  - '00000002'\n  - '00000003'\n  grayTagKey: level\n  grayTagValue:\n  - level3\n  - level5\nbaseDeployment:\n  version: base\ngrayDeployments:\n  - name: beta-user\n    version: gray\n    enabled: true\n```\n\nThe unique identifier of the user in the cookie is `userid`, and the current gray release rule has configured the `beta-user` rule.  \nWhen the following conditions are met, the version `version: gray` will be used:\n- `userid` in the cookie equals `00000002` or `00000003`\n- Users whose `level` in the cookie equals `level3` or `level5`  \nOtherwise, use version `version: base`.\n\n### User Information Exists in JSON\n```yml\ngrayKey: appInfo\ngraySubKey: userId\nrules:\n- name: inner-user\n  grayKeyValue:\n  - '00000001'\n  - '00000005'\n- name: beta-user\n  grayKeyValue:\n  - '00000002'\n  - '00000003'\n  grayTagKey: level\n  grayTagValue:\n  - level3\n  - level5\nbaseDeployment:\n  version: base\ngrayDeployments:\n  - name: beta-user\n    version: gray\n    enabled: true\n```\n\nThe cookie contains JSON data for `appInfo`, which includes the field `userId` as the current unique identifier.  \nThe current gray release rule has configured the `beta-user` rule.  \nWhen the following conditions are met, the version `version: gray` will be used:\n- `userid` in the cookie equals `00000002` or `00000003`\n- Users whose `level` in the cookie equals `level3` or `level5`  \nOtherwise, use version `version: base`.\n\n### Rewrite Configuration\n> Generally used in CDN deployment scenarios.\n```yml\ngrayKey: userid\nrules:\n- name: inner-user\n  grayKeyValue:\n  - '00000001'\n  - '00000005'\n- name: beta-user\n  grayKeyValue:\n  - '00000002'\n  - '00000003'\n  grayTagKey: level\n  grayTagValue:\n  - level3\n  - level5\nrewrite:\n  host: frontend-gray.oss-cn-shanghai-internal.aliyuncs.com\n  notFoundUri: /mfe/app1/dev/404.html\n  indexRouting:\n    /app1: '/mfe/app1/{version}/index.html'\n    /: '/mfe/app1/{version}/index.html',\n  fileRouting:\n    /: '/mfe/app1/{version}'\n    /app1/: '/mfe/app1/{version}'\nbaseDeployment:\n  version: base\ngrayDeployments:\n  - name: beta-user\n    version: gray\n    enabled: true\n```\n\n`{version}` will be dynamically replaced with the actual version during execution.\n\n#### indexRouting: Homepage Route Configuration\nAccessing `/app1`, `/app123`, `/app1/index.html`, `/app1/xxx`, `/xxxx` will route to '/mfe/app1/{version}/index.html'.\n\n#### fileRouting: File Route Configuration\nThe following file mappings are effective:\n- `/js/a.js` => `/mfe/app1/v1.0.0/js/a.js`\n- `/js/template/a.js` => `/mfe/app1/v1.0.0/js/template/a.js`\n- `/app1/js/a.js` => `/mfe/app1/v1.0.0/js/a.js`\n- `/app1/js/template/a.js` => `/mfe/app1/v1.0.0/js/template/a.js`\n",a={title:"Frontend Gray",description:"Frontend gray plugin configuration reference",editUrl:!0,head:[],template:"doc",sidebar:{hidden:!1,attrs:{}},pagefind:!0,keywords:["higress","frontend gray"]},t={type:"content",filePath:"/home/runner/work/higress-group.github.io/higress-group.github.io/src/content/docs/latest/en/plugins/transformation/frontend-gray.md",rawData:void 0};export{t as _internal,i as body,n as collection,a as data,e as id,r as slug};
